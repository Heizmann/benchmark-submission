(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Denghang Hu
Generated on: 2023-03-29
Application: Evaluate string solvers
Target solver: Ostrich, Z3str3, CVC5
Description: The instance consists of:
(1) a regular membership predicate from the real world
(2) a regular membership predicate to sanitize danger letters in javascript such as <,>,&,",'
(3) a lower bound for string length
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
        ;test regex (([!@#%_\-=`~,\.\/;: ]*(YY(YY)?([!@#%_\-=`~,\.\/;: ]*(M{1,4}([!@#%_\-=`~,\.\/;: ]*(DD?)?)?)?)?))|([!@#%_\-=`~,\.\/;: ]*(YY(YY)?([!@#%_\-=`~,\.\/;: ]*(DD?([!@#%_\-=`~,\.\/;: ]*(M{1,4})?)?)?)?))|([!@#%_\-=`~,\.\/;: ]*(M{1,4}([!@#%_\-=`~,\.\/;: ]*(DD?([!@#%_\-=`~,\.\/;: ]*(YY(YY)?)?)?)?)?))|([!@#%_\-=`~,\.\/;: ]*(M{1,4}([!@#%_\-=`~,\.\/;: ]*(YY(YY)?([!@#%_\-=`~,\.\/;: ]*(DD?)?)?)?)?))|([!@#%_\-=`~,\.\/;: ]*(DD?([!@#%_\-=`~,\.\/;: ]*(YY(YY)?([!@#%_\-=`~,\.\/;: ]*(M{1,4})?)?)?)?))|([!@#%_\-=`~,\.\/;: ]*(DD?([!@#%_\-=`~,\.\/;: ]*(M{1,4}([!@#%_\-=`~,\.\/;: ]*(YY(YY)?)?)?)?)?)))[!@#%_\-=`~,\.\/;: ]*
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.union (re.union (re.union (re.union (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.++ (str.to_re "Y") (re.++ (str.to_re "Y") (re.++ (re.opt (re.++ (str.to_re "Y") (str.to_re "Y"))) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ ((_ re.loop 1 4) (str.to_re "M")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "D") (re.opt (str.to_re "D")))))))))))))) (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.++ (str.to_re "Y") (re.++ (str.to_re "Y") (re.++ (re.opt (re.++ (str.to_re "Y") (str.to_re "Y"))) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "D") (re.++ (re.opt (str.to_re "D")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt ((_ re.loop 1 4) (str.to_re "M"))))))))))))))) (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.++ ((_ re.loop 1 4) (str.to_re "M")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "D") (re.++ (re.opt (str.to_re "D")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "Y") (re.++ (str.to_re "Y") (re.opt (re.++ (str.to_re "Y") (str.to_re "Y")))))))))))))))) (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.++ ((_ re.loop 1 4) (str.to_re "M")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "Y") (re.++ (str.to_re "Y") (re.++ (re.opt (re.++ (str.to_re "Y") (str.to_re "Y"))) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "D") (re.opt (str.to_re "D"))))))))))))))) (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.++ (str.to_re "D") (re.++ (re.opt (str.to_re "D")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "Y") (re.++ (str.to_re "Y") (re.++ (re.opt (re.++ (str.to_re "Y") (str.to_re "Y"))) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt ((_ re.loop 1 4) (str.to_re "M"))))))))))))))) (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.++ (str.to_re "D") (re.++ (re.opt (str.to_re "D")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ ((_ re.loop 1 4) (str.to_re "M")) (re.opt (re.++ (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))) (re.opt (re.++ (str.to_re "Y") (re.++ (str.to_re "Y") (re.opt (re.++ (str.to_re "Y") (str.to_re "Y")))))))))))))))) (re.* (re.union (str.to_re "!") (re.union (str.to_re "@") (re.union (str.to_re "#") (re.union (str.to_re "%") (re.union (str.to_re "_") (re.union (str.to_re "-") (re.union (str.to_re "=") (re.union (str.to_re "`") (re.union (str.to_re "~") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (str.to_re ";") (re.union (str.to_re ":") (str.to_re " ")))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 20 (str.len X)))
(check-sat)
(exit)
