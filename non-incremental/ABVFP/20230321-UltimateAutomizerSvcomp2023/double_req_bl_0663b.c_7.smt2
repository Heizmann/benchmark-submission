(set-info :smt-lib-version 2.6)
(set-logic ABVFP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |c_#memory_int| () (Array (_ BitVec 64) (Array (_ BitVec 64) (_ BitVec 32))))
(declare-fun |c_ULTIMATE.start_main_~x~0#1| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start_main_~y~0#1| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start___ieee754_atan2_#in~y#1_primed| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start___ieee754_atan2_#in~x#1_primed| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start___ieee754_atan2_~y#1_primed| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start___ieee754_atan2_~x#1_primed| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start___ieee754_atan2_~ix~1#1_primed| () (_ BitVec 32))
(assert (and (= |c_ULTIMATE.start___ieee754_atan2_#in~y#1_primed| |c_ULTIMATE.start_main_~y~0#1|) (fp.gt |c_ULTIMATE.start_main_~y~0#1| (_ +zero 11 53)) (= |c_ULTIMATE.start___ieee754_atan2_#in~x#1_primed| |c_ULTIMATE.start_main_~x~0#1|) (= |c_ULTIMATE.start___ieee754_atan2_#in~x#1_primed| |c_ULTIMATE.start___ieee754_atan2_~x#1_primed|) (= |c_ULTIMATE.start___ieee754_atan2_#in~y#1_primed| |c_ULTIMATE.start___ieee754_atan2_~y#1_primed|)))
(assert (= (_ +zero 11 53) |c_ULTIMATE.start_main_~x~0#1|))
(assert (not (and (fp.gt |c_ULTIMATE.start___ieee754_atan2_~y#1_primed| (_ +zero 11 53)) (exists ((|v_skolemized_q#valueAsBitvector_23| (_ BitVec 64)) (|v_ULTIMATE.start___ieee754_atan2_~#ew_u~0#1.base_6| (_ BitVec 64))) (let ((.cse0 (select (select |c_#memory_int| |v_ULTIMATE.start___ieee754_atan2_~#ew_u~0#1.base_6|) (_ bv4 64)))) (and (= .cse0 ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_23|)) (= (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_23|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_23|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_23|)) (_ +zero 11 53)) (= |c_ULTIMATE.start___ieee754_atan2_~ix~1#1_primed| (bvand (_ bv2147483647 32) .cse0))))))))
(check-sat)
(exit)
