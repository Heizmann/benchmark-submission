(set-info :smt-lib-version 2.6)
(set-logic ABVFP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |c_#memory_int| () (Array (_ BitVec 64) (Array (_ BitVec 64) (_ BitVec 32))))
(declare-fun |c_ULTIMATE.start_main_~x~0#1| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start_isinf_double_#res#1| () (_ BitVec 32))
(declare-fun |c_ULTIMATE.start_isinf_double_~x#1| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start_isnan_double_#res#1| () (_ BitVec 32))
(declare-fun |c_ULTIMATE.start_isfinite_double_~x#1| () (_ FloatingPoint 11 53))
(declare-fun |c_ULTIMATE.start_isfinite_double_~hx~1#1| () (_ BitVec 32))
(assert (and (exists ((|v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7| (_ BitVec 64)) (|v_skolemized_q#valueAsBitvector_9| (_ BitVec 64))) (let ((.cse3 (select |c_#memory_int| |v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7|))) (let ((.cse0 (select .cse3 (_ bv0 64))) (.cse2 (select .cse3 (_ bv4 64)))) (and (= ((_ extract 31 0) |v_skolemized_q#valueAsBitvector_9|) .cse0) (= (bvadd (_ bv1 32) (bvneg (bvlshr (let ((.cse1 (bvadd (_ bv2146435072 32) (bvneg (bvor (bvand (_ bv2147483647 32) .cse2) (bvlshr (bvor (bvneg .cse0) .cse0) (_ bv31 32))))))) (bvor (bvneg .cse1) .cse1)) (_ bv31 32)))) (_ bv0 32)) (= ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_9|) .cse2) (= |c_ULTIMATE.start_main_~x~0#1| (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_9|))))))) (let ((.cse4 (fp.eq |c_ULTIMATE.start_main_~x~0#1| |c_ULTIMATE.start_main_~x~0#1|))) (or (and (= |c_ULTIMATE.start_isnan_double_#res#1| (_ bv0 32)) .cse4) (and (not .cse4) (= |c_ULTIMATE.start_isnan_double_#res#1| (_ bv1 32))))) (= |c_ULTIMATE.start_isinf_double_~x#1| |c_ULTIMATE.start_main_~x~0#1|) (exists ((|v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7| (_ BitVec 64)) (|v_skolemized_q#valueAsBitvector_9| (_ BitVec 64))) (let ((.cse8 (select |c_#memory_int| |v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7|))) (let ((.cse7 (select .cse8 (_ bv0 64))) (.cse6 (select .cse8 (_ bv4 64)))) (and (= (bvadd (_ bv1 32) (bvneg (bvlshr (let ((.cse5 (bvadd (_ bv2146435072 32) (bvneg (bvor (bvand (_ bv2147483647 32) .cse6) (bvlshr (bvor (bvneg .cse7) .cse7) (_ bv31 32))))))) (bvor (bvneg .cse5) .cse5)) (_ bv31 32)))) |c_ULTIMATE.start_isinf_double_#res#1|) (= ((_ extract 31 0) |v_skolemized_q#valueAsBitvector_9|) .cse7) (= ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_9|) .cse6) (= |c_ULTIMATE.start_main_~x~0#1| (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_9|))))))) (exists ((|v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7| (_ BitVec 64)) (|v_skolemized_q#valueAsBitvector_9| (_ BitVec 64))) (let ((.cse13 (select |c_#memory_int| |v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7|))) (let ((.cse9 (select .cse13 (_ bv0 64))) (.cse11 (select .cse13 (_ bv4 64))) (.cse12 (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_9|)))) (and (= ((_ extract 31 0) |v_skolemized_q#valueAsBitvector_9|) .cse9) (= (bvadd (_ bv1 32) (bvneg (bvlshr (let ((.cse10 (bvadd (_ bv2146435072 32) (bvneg (bvor (bvand (_ bv2147483647 32) .cse11) (bvlshr (bvor (bvneg .cse9) .cse9) (_ bv31 32))))))) (bvor (bvneg .cse10) .cse10)) (_ bv31 32)))) (_ bv0 32)) (= ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_9|) .cse11) (fp.eq .cse12 .cse12) (= .cse12 |c_ULTIMATE.start_isfinite_double_~x#1|)))))))
(assert (not (and (= |c_ULTIMATE.start_isinf_double_~x#1| |c_ULTIMATE.start_main_~x~0#1|) (exists ((|v_skolemized_q#valueAsBitvector_9| (_ BitVec 64)) (|v_skolemized_q#valueAsBitvector_10| (_ BitVec 64))) (let ((.cse2 (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_9|)))) (and (= (bvadd (bvneg (bvlshr (let ((.cse0 (bvadd (_ bv2146435072 32) (bvneg (bvor (bvand (_ bv2147483647 32) ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_9|)) (bvlshr (let ((.cse1 ((_ extract 31 0) |v_skolemized_q#valueAsBitvector_9|))) (bvor (bvneg .cse1) .cse1)) (_ bv31 32))))))) (bvor (bvneg .cse0) .cse0)) (_ bv31 32))) (_ bv1 32)) (_ bv0 32)) (fp.eq .cse2 .cse2) (= |c_ULTIMATE.start_isfinite_double_~hx~1#1| ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_10|)) (= .cse2 (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_10|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_10|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_10|)))))) (exists ((|v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7| (_ BitVec 64)) (|v_skolemized_q#valueAsBitvector_9| (_ BitVec 64))) (let ((.cse7 (select |c_#memory_int| |v_ULTIMATE.start_isinf_double_~#ew_u~0#1.base_7|))) (let ((.cse3 (select .cse7 (_ bv0 64))) (.cse5 (select .cse7 (_ bv4 64))) (.cse6 (fp ((_ extract 63 63) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 62 52) |v_skolemized_q#valueAsBitvector_9|) ((_ extract 51 0) |v_skolemized_q#valueAsBitvector_9|)))) (and (= ((_ extract 31 0) |v_skolemized_q#valueAsBitvector_9|) .cse3) (= (bvadd (_ bv1 32) (bvneg (bvlshr (let ((.cse4 (bvadd (_ bv2146435072 32) (bvneg (bvor (bvand (_ bv2147483647 32) .cse5) (bvlshr (bvor (bvneg .cse3) .cse3) (_ bv31 32))))))) (bvor (bvneg .cse4) .cse4)) (_ bv31 32)))) (_ bv0 32)) (= ((_ extract 63 32) |v_skolemized_q#valueAsBitvector_9|) .cse5) (fp.eq .cse6 .cse6) (= .cse6 |c_ULTIMATE.start_isfinite_double_~x#1|))))))))
(check-sat)
(exit)
