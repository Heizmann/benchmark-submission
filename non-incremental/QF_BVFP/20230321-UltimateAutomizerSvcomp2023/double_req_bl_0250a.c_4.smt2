(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun v_currentRoundingMode_10_const_1497110592 () RoundingMode)
(declare-fun |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| () (_ FloatingPoint 11 53))
(declare-fun v_~pS5_asin~0_3_const_-735490478 () (_ FloatingPoint 11 53))
(declare-fun v_~pS4_asin~0_3_const_-1595876019 () (_ FloatingPoint 11 53))
(declare-fun v_~pS3_asin~0_3_const_-1397330900 () (_ FloatingPoint 11 53))
(declare-fun v_~pS2_asin~0_3_const_-1156717809 () (_ FloatingPoint 11 53))
(declare-fun v_~pS1_asin~0_3_const_-2017234450 () (_ FloatingPoint 11 53))
(declare-fun v_~pS0_asin~0_3_const_-1818591031 () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start___ieee754_asin_~p~0#1_7_const_-178944175| () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start___ieee754_sqrt_#in~x#1_1_const_-1184732396| () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start___ieee754_sqrt_~x#1_1_const_-92264050| () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start___ieee754_asin_~w~0#1_9_const_1753228840| () (_ FloatingPoint 11 53))
(declare-fun v_~one_asin~0_5_const_1383801120 () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start_fabs_double_#res#1_3_const_-1359360858| () (_ FloatingPoint 11 53))
(declare-fun v_~qS4_asin~0_3_const_-1464763758 () (_ FloatingPoint 11 53))
(declare-fun v_~qS3_asin~0_3_const_-1224177267 () (_ FloatingPoint 11 53))
(declare-fun v_~qS2_asin~0_3_const_-2082596756 () (_ FloatingPoint 11 53))
(declare-fun v_~qS1_asin~0_3_const_-1886015665 () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start___ieee754_asin_~q~1#1_7_const_-1368829421| () (_ FloatingPoint 11 53))
(declare-fun |v_ULTIMATE.start___ieee754_sqrt_~sign~0#1_1_const_1199687628| () (_ BitVec 32))
(assert (and (= |v_ULTIMATE.start___ieee754_sqrt_#in~x#1_1_const_-1184732396| |v_ULTIMATE.start___ieee754_sqrt_~x#1_1_const_-92264050|) (= |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~w~0#1_9_const_1753228840| ((_ to_fp 11 53) v_currentRoundingMode_10_const_1497110592 (/ 1.0 2.0)))) (= (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~pS0_asin~0_3_const_-1818591031 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~pS1_asin~0_3_const_-2017234450 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~pS2_asin~0_3_const_-1156717809 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~pS3_asin~0_3_const_-1397330900 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~pS4_asin~0_3_const_-1595876019 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| v_~pS5_asin~0_3_const_-735490478))))))))))) |v_ULTIMATE.start___ieee754_asin_~p~0#1_7_const_-178944175|) (= (fp.sub v_currentRoundingMode_10_const_1497110592 v_~one_asin~0_5_const_1383801120 |v_ULTIMATE.start_fabs_double_#res#1_3_const_-1359360858|) |v_ULTIMATE.start___ieee754_asin_~w~0#1_9_const_1753228840|) (= |v_ULTIMATE.start___ieee754_asin_~q~1#1_7_const_-1368829421| (fp.add v_currentRoundingMode_10_const_1497110592 v_~one_asin~0_5_const_1383801120 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~qS1_asin~0_3_const_-1886015665 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~qS2_asin~0_3_const_-2082596756 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| (fp.add v_currentRoundingMode_10_const_1497110592 v_~qS3_asin~0_3_const_-1224177267 (fp.mul v_currentRoundingMode_10_const_1497110592 |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878| v_~qS4_asin~0_3_const_-1464763758))))))))) (= |v_ULTIMATE.start___ieee754_sqrt_#in~x#1_1_const_-1184732396| |v_ULTIMATE.start___ieee754_asin_~t~1#1_9_const_154960878|) (= |v_ULTIMATE.start___ieee754_sqrt_~sign~0#1_1_const_1199687628| (_ bv2147483648 32))))
(check-sat)
(exit)
