(set-info :smt-lib-version 2.6)
(set-logic BV)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |ULTIMATE.start_main_~state_4~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_21~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_27~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_29~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_25~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_23~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~var_37~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_17~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_15~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~mask_SORT_1~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_19~0#1| () (_ BitVec 8))
(declare-fun |ULTIMATE.start_main_~state_13~0#1| () (_ BitVec 8))
(assert (or (= (_ bv0 8) |ULTIMATE.start_main_~state_29~0#1|) (let ((.cse4 ((_ zero_extend 24) |ULTIMATE.start_main_~state_25~0#1|)) (.cse5 ((_ zero_extend 24) |ULTIMATE.start_main_~state_4~0#1|)) (.cse3 ((_ zero_extend 24) |ULTIMATE.start_main_~mask_SORT_1~0#1|))) (let ((.cse1 (forall ((|v_ULTIMATE.start_main_~var_11_arg_0~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_39_arg_1~0#1_6| (_ BitVec 8))) (= ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_11_arg_0~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_39_arg_1~0#1_6|) .cse4))) .cse3))) .cse5))) .cse3))))) (_ bv0 32)))) .cse3)))))))) .cse3)))))) .cse3)))))) .cse3)) (_ bv0 8)))) (.cse2 (forall ((|v_ULTIMATE.start_main_~var_41_arg_2~0#1_5| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_11_arg_0~0#1_6| (_ BitVec 8))) (= ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_41_arg_2~0#1_5|)))))) .cse3)))))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_11_arg_0~0#1_6|)))) .cse3)) (_ bv0 8)))) (.cse0 (= (_ bv0 8) |ULTIMATE.start_main_~state_13~0#1|))) (and (or .cse0 (and .cse1 (or .cse2 (forall ((|v_ULTIMATE.start_main_~var_138_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_172_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_206_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_223_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_104_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_155_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_121_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_189_arg_1~0#1_6| (_ BitVec 8))) (not (= ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_223_arg_1~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand .cse3 ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_206_arg_1~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_172_arg_1~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand .cse3 ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) |ULTIMATE.start_main_~state_27~0#1|)))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) (bvand .cse3 ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand .cse3 ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) |ULTIMATE.start_main_~state_17~0#1|)))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) |ULTIMATE.start_main_~state_15~0#1|)))) .cse3))) ((_ zero_extend 24) |ULTIMATE.start_main_~state_13~0#1|)))) .cse3))))))))) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) |ULTIMATE.start_main_~state_19~0#1|)))) .cse3)))))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) |ULTIMATE.start_main_~state_21~0#1|)))) .cse3)))))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) |ULTIMATE.start_main_~state_23~0#1|)))) .cse3)))))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot .cse4))) .cse3)))))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) (bvand .cse3 ((_ zero_extend 24) ((_ extract 7 0) (bvnot .cse5)))))))))))))))))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_104_arg_1~0#1_6|)))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_121_arg_1~0#1_6|)))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_138_arg_1~0#1_6|)))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_155_arg_1~0#1_6|)))) .cse3)))))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_189_arg_1~0#1_6|)))) .cse3)))))))))))) .cse3)) (_ bv0 8))))))) (or (and .cse1 (or (forall ((|v_ULTIMATE.start_main_~var_11_arg_0~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_39_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_39_arg_0~0#1_5| (_ BitVec 8))) (= ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_39_arg_0~0#1_5|) (_ bv1 32)))) .cse3))) ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_39_arg_1~0#1_6|) .cse4))) .cse3))) .cse5))) .cse3)))))))) .cse3)))))))) .cse3)))))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_11_arg_0~0#1_6|)))) .cse3)) (_ bv0 8))) (forall ((|v_ULTIMATE.start_main_~var_239_arg_2~0#1_6| (_ BitVec 8))) (= ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_239_arg_2~0#1_6|))))) ((_ zero_extend 24) |ULTIMATE.start_main_~var_37~0#1|)))) (or .cse2 (forall ((|v_ULTIMATE.start_main_~var_138_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_172_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_206_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_223_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_104_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_155_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_121_arg_1~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_189_arg_1~0#1_6| (_ BitVec 8))) (not (= ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_223_arg_1~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_206_arg_1~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_172_arg_1~0#1_6|) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand .cse3 ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_104_arg_1~0#1_6|) (_ bv0 32)))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_121_arg_1~0#1_6|))))))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_138_arg_1~0#1_6|)))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_155_arg_1~0#1_6|)))) .cse3)))))) .cse3))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_189_arg_1~0#1_6|)))) .cse3)))))) .cse3)))))) .cse3)) (_ bv0 8)))))) (not .cse0)))))))
(assert (not (let ((.cse1 ((_ zero_extend 24) |ULTIMATE.start_main_~mask_SORT_1~0#1|))) (let ((.cse0 (forall ((|v_ULTIMATE.start_main_~var_41_arg_2~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_11_arg_0~0#1_6| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_39_arg_0~0#1_5| (_ BitVec 8))) (= (_ bv0 8) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvor ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_41_arg_2~0#1_6|))) ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_39_arg_0~0#1_5|) (_ bv1 32)))) .cse1)))))) .cse1)))))))) .cse1)))))) .cse1))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_11_arg_0~0#1_6|)))) .cse1)))))) (and .cse0 (or (not (= (_ bv0 8) |ULTIMATE.start_main_~state_13~0#1|)) (and .cse0 (forall ((|v_ULTIMATE.start_main_~var_41_arg_2~0#1_5| (_ BitVec 8)) (|v_ULTIMATE.start_main_~var_11_arg_0~0#1_6| (_ BitVec 8))) (= ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvnot ((_ zero_extend 24) ((_ extract 7 0) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_41_arg_2~0#1_5|)))))) .cse1)))))) .cse1))) ((_ zero_extend 24) |v_ULTIMATE.start_main_~var_11_arg_0~0#1_6|)))) .cse1)) (_ bv0 8))))))))))
(assert (not (= (_ bv0 8) |ULTIMATE.start_main_~state_29~0#1|)))
(check-sat)
(exit)
