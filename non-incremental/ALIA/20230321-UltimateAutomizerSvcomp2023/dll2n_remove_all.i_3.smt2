(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun ~unnamed0~0~P_ALL () Int)
(declare-fun ~unnamed0~0~P_PID () Int)
(declare-fun ~unnamed0~0~P_PGID () Int)
(declare-fun |c_#memory_$Pointer$.base| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset| () (Array Int (Array Int Int)))
(declare-fun |c_ULTIMATE.start_main_~#s~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_main_~#s~0#1.offset| () Int)
(declare-fun |c_ULTIMATE.start_dll_create_~new_head~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_dll_create_~new_head~0#1.offset| () Int)
(declare-fun |c_ULTIMATE.start_dll_create_~head~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_dll_create_~head~0#1.offset| () Int)
(assert (= ~unnamed0~0~P_ALL 0))
(assert (= ~unnamed0~0~P_PID 1))
(assert (= 2 ~unnamed0~0~P_PGID))
(assert (let ((.cse10 (+ |c_ULTIMATE.start_dll_create_~head~0#1.offset| 12)) (.cse0 (+ |c_ULTIMATE.start_dll_create_~new_head~0#1.offset| 4))) (and (forall ((v_arrayElimArr_3 (Array Int Int))) (or (forall ((v_arrayElimArr_4 (Array Int Int))) (let ((.cse6 (let ((.cse11 (store |c_#memory_$Pointer$.base| |c_ULTIMATE.start_dll_create_~new_head~0#1.base| v_arrayElimArr_4))) (store .cse11 |c_ULTIMATE.start_dll_create_~head~0#1.base| (store (select .cse11 |c_ULTIMATE.start_dll_create_~head~0#1.base|) .cse10 |c_ULTIMATE.start_dll_create_~new_head~0#1.base|))))) (let ((.cse1 (select (select .cse6 |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|))) (or (not (= (select v_arrayElimArr_4 .cse0) |c_ULTIMATE.start_dll_create_~head~0#1.base|)) (not (= .cse1 |c_ULTIMATE.start_dll_create_~new_head~0#1.base|)) (forall ((v_ArrVal_419 Int) (v_ArrVal_414 Int)) (let ((.cse4 (let ((.cse9 (store |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_dll_create_~new_head~0#1.base| v_arrayElimArr_3))) (store .cse9 |c_ULTIMATE.start_dll_create_~head~0#1.base| (store (select .cse9 |c_ULTIMATE.start_dll_create_~head~0#1.base|) .cse10 v_ArrVal_414))))) (let ((.cse8 (select (select .cse4 |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|))) (or (= (let ((.cse7 (+ .cse8 4))) (let ((.cse3 (select (select .cse4 .cse1) .cse7))) (select (let ((.cse5 (select (select .cse6 .cse1) .cse7))) (select (let ((.cse2 (store .cse4 .cse5 (store (select .cse4 .cse5) (+ 12 .cse3) v_ArrVal_419)))) (store .cse2 |c_ULTIMATE.start_main_~#s~0#1.base| (store (select .cse2 |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset| .cse3))) .cse5)) (+ 4 .cse3)))) 0) (not (= .cse8 |c_ULTIMATE.start_dll_create_~new_head~0#1.offset|)))))))))) (not (= |c_ULTIMATE.start_dll_create_~head~0#1.offset| (select v_arrayElimArr_3 .cse0))))) (forall ((v_arrayElimArr_3 (Array Int Int))) (or (forall ((v_arrayElimArr_4 (Array Int Int))) (let ((.cse14 (let ((.cse21 (store |c_#memory_$Pointer$.base| |c_ULTIMATE.start_dll_create_~new_head~0#1.base| v_arrayElimArr_4))) (store .cse21 |c_ULTIMATE.start_dll_create_~head~0#1.base| (store (select .cse21 |c_ULTIMATE.start_dll_create_~head~0#1.base|) .cse10 |c_ULTIMATE.start_dll_create_~new_head~0#1.base|))))) (let ((.cse16 (select (select .cse14 |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|))) (or (not (= (select v_arrayElimArr_4 .cse0) |c_ULTIMATE.start_dll_create_~head~0#1.base|)) (forall ((v_prenex_1 Int) (v_ArrVal_418 Int)) (let ((.cse18 (let ((.cse20 (store |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_dll_create_~new_head~0#1.base| v_arrayElimArr_3))) (store .cse20 |c_ULTIMATE.start_dll_create_~head~0#1.base| (store (select .cse20 |c_ULTIMATE.start_dll_create_~head~0#1.base|) .cse10 v_prenex_1))))) (let ((.cse19 (select (select .cse18 |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|))) (or (= (let ((.cse17 (+ .cse19 4))) (let ((.cse15 (select (select .cse18 .cse16) .cse17))) (select (let ((.cse13 (select (select .cse14 .cse16) .cse17))) (select (let ((.cse12 (store .cse14 .cse13 (store (select .cse14 .cse13) (+ .cse15 12) v_ArrVal_418)))) (store .cse12 |c_ULTIMATE.start_main_~#s~0#1.base| (store (select .cse12 |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset| .cse13))) .cse13)) (+ .cse15 4)))) 0) (not (= .cse19 |c_ULTIMATE.start_dll_create_~new_head~0#1.offset|)))))) (not (= .cse16 |c_ULTIMATE.start_dll_create_~new_head~0#1.base|)))))) (not (= |c_ULTIMATE.start_dll_create_~head~0#1.offset| (select v_arrayElimArr_3 .cse0))))))))
(assert (not (let ((.cse0 (select (select |c_#memory_$Pointer$.base| |c_ULTIMATE.start_dll_create_~head~0#1.base|) 4))) (and (= |c_ULTIMATE.start_dll_create_~head~0#1.offset| 0) (= (select (select |c_#memory_$Pointer$.base| .cse0) 4) 0) (not (= .cse0 |c_ULTIMATE.start_main_~#s~0#1.base|)) (= (select (select |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_dll_create_~head~0#1.base|) 4) 0) (= (select (select |c_#memory_$Pointer$.offset| .cse0) 4) 0)))))
(check-sat)
(exit)
