(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun ~unnamed0~0~P_ALL () Int)
(declare-fun ~unnamed0~0~P_PID () Int)
(declare-fun ~unnamed0~0~P_PGID () Int)
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#memory_$Pointer$.base| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.base_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int_primed| () (Array Int (Array Int Int)))
(declare-fun |c_ULTIMATE.start_main_~a~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_main_~a~0#1.offset| () Int)
(declare-fun |c_ULTIMATE.start_main_~t~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_main_~t~0#1.offset| () Int)
(declare-fun |c_ULTIMATE.start_main_~p~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_main_~p~0#1.base_primed| () Int)
(declare-fun |c_ULTIMATE.start_main_~p~0#1.offset| () Int)
(declare-fun |c_ULTIMATE.start_main_~p~0#1.offset_primed| () Int)
(assert (= ~unnamed0~0~P_ALL 0))
(assert (= ~unnamed0~0~P_PID 1))
(assert (= 2 ~unnamed0~0~P_PGID))
(assert (let ((.cse0 (+ |c_ULTIMATE.start_main_~p~0#1.offset| 4))) (and (= |c_#memory_$Pointer$.offset_primed| (store |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_main_~p~0#1.base| (store (select |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_main_~p~0#1.base|) .cse0 |c_ULTIMATE.start_main_~t~0#1.offset|))) (= (select (select |c_#memory_$Pointer$.base_primed| |c_ULTIMATE.start_main_~p~0#1.base|) .cse0) |c_ULTIMATE.start_main_~p~0#1.base_primed|) (= |c_#memory_$Pointer$.base_primed| (store |c_#memory_$Pointer$.base| |c_ULTIMATE.start_main_~p~0#1.base| (store (select |c_#memory_$Pointer$.base| |c_ULTIMATE.start_main_~p~0#1.base|) .cse0 |c_ULTIMATE.start_main_~t~0#1.base|))) (= (select (select |c_#memory_$Pointer$.offset_primed| |c_ULTIMATE.start_main_~p~0#1.base|) .cse0) |c_ULTIMATE.start_main_~p~0#1.offset_primed|) (= |c_#memory_int_primed| (store |c_#memory_int| |c_ULTIMATE.start_main_~p~0#1.base| (store (select |c_#memory_int| |c_ULTIMATE.start_main_~p~0#1.base|) .cse0 (select (select |c_#memory_int_primed| |c_ULTIMATE.start_main_~p~0#1.base|) .cse0)))))))
(assert (let ((.cse6 (select |c_#memory_int| |c_ULTIMATE.start_main_~p~0#1.base|)) (.cse3 (select |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_main_~p~0#1.base|)) (.cse4 (+ |c_ULTIMATE.start_main_~p~0#1.offset| 4))) (and (forall ((|v_ULTIMATE.start_main_~p~0#1.base_62| Int) (v_ArrVal_384 (Array Int Int)) (v_ArrVal_381 Int) (v_ArrVal_385 (Array Int Int)) (v_ArrVal_379 (Array Int Int))) (let ((.cse1 (let ((.cse5 (store |c_#memory_int| |c_ULTIMATE.start_main_~p~0#1.base| (store .cse6 .cse4 v_ArrVal_381)))) (store .cse5 |v_ULTIMATE.start_main_~p~0#1.base_62| (store (select .cse5 |v_ULTIMATE.start_main_~p~0#1.base_62|) |c_ULTIMATE.start_main_~t~0#1.offset| 3))))) (let ((.cse0 (let ((.cse2 (+ |c_ULTIMATE.start_main_~a~0#1.offset| 4))) (select (select .cse1 (select (select (store (store |c_#memory_$Pointer$.base| |c_ULTIMATE.start_main_~p~0#1.base| v_ArrVal_379) |v_ULTIMATE.start_main_~p~0#1.base_62| v_ArrVal_385) |c_ULTIMATE.start_main_~a~0#1.base|) .cse2)) (select (select (store (store |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_main_~p~0#1.base| (store .cse3 .cse4 |c_ULTIMATE.start_main_~t~0#1.offset|)) |v_ULTIMATE.start_main_~p~0#1.base_62| v_ArrVal_384) |c_ULTIMATE.start_main_~a~0#1.base|) .cse2))))) (or (= .cse0 2) (not (= 2 (select (select .cse1 |c_ULTIMATE.start_main_~a~0#1.base|) |c_ULTIMATE.start_main_~a~0#1.offset|))) (= .cse0 3))))) (= (select |c_#valid| |c_ULTIMATE.start_main_~a~0#1.base|) 1) (not (= |c_ULTIMATE.start_main_~t~0#1.base| |c_ULTIMATE.start_main_~a~0#1.base|)) (= (select |c_#valid| |c_ULTIMATE.start_main_~t~0#1.base|) 1) (= |c_ULTIMATE.start_main_~t~0#1.offset| 0) (= |c_ULTIMATE.start_main_~a~0#1.offset| 0) (let ((.cse7 (select (select |c_#memory_int| (select (select |c_#memory_$Pointer$.base| |c_ULTIMATE.start_main_~p~0#1.base|) .cse4)) (select .cse3 .cse4)))) (or (= 3 .cse7) (= 2 .cse7) (not (= 2 (select .cse6 |c_ULTIMATE.start_main_~p~0#1.offset|))))) (= |c_ULTIMATE.start_main_~p~0#1.offset| 0) (= |c_ULTIMATE.start_main_~p~0#1.base| |c_ULTIMATE.start_main_~a~0#1.base|))))
(assert (not (forall ((|v_ULTIMATE.start_main_~p~0#1.base_62| Int) (v_ArrVal_384 (Array Int Int)) (v_ArrVal_381 Int) (v_ArrVal_385 (Array Int Int)) (v_ArrVal_379 (Array Int Int))) (let ((.cse3 (+ |c_ULTIMATE.start_main_~p~0#1.offset_primed| 4))) (let ((.cse1 (let ((.cse4 (store |c_#memory_int_primed| |c_ULTIMATE.start_main_~p~0#1.base_primed| (store (select |c_#memory_int_primed| |c_ULTIMATE.start_main_~p~0#1.base_primed|) .cse3 v_ArrVal_381)))) (store .cse4 |v_ULTIMATE.start_main_~p~0#1.base_62| (store (select .cse4 |v_ULTIMATE.start_main_~p~0#1.base_62|) |c_ULTIMATE.start_main_~t~0#1.offset| 3))))) (let ((.cse0 (let ((.cse2 (+ |c_ULTIMATE.start_main_~a~0#1.offset| 4))) (select (select .cse1 (select (select (store (store |c_#memory_$Pointer$.base_primed| |c_ULTIMATE.start_main_~p~0#1.base_primed| v_ArrVal_379) |v_ULTIMATE.start_main_~p~0#1.base_62| v_ArrVal_385) |c_ULTIMATE.start_main_~a~0#1.base|) .cse2)) (select (select (store (store |c_#memory_$Pointer$.offset_primed| |c_ULTIMATE.start_main_~p~0#1.base_primed| (store (select |c_#memory_$Pointer$.offset_primed| |c_ULTIMATE.start_main_~p~0#1.base_primed|) .cse3 |c_ULTIMATE.start_main_~t~0#1.offset|)) |v_ULTIMATE.start_main_~p~0#1.base_62| v_ArrVal_384) |c_ULTIMATE.start_main_~a~0#1.base|) .cse2))))) (or (= 3 .cse0) (= 2 .cse0) (not (= 2 (select (select .cse1 |c_ULTIMATE.start_main_~a~0#1.base|) |c_ULTIMATE.start_main_~a~0#1.offset|))))))))))
(check-sat)
(exit)
