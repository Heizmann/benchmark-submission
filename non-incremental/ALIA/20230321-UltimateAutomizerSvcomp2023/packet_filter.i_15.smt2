(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun ~unnamed0~0~P_ALL () Int)
(declare-fun ~unnamed0~0~P_PID () Int)
(declare-fun ~unnamed0~0~P_PGID () Int)
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#memory_$Pointer$.base| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset| () (Array Int (Array Int Int)))
(declare-fun |c_ULTIMATE.start_main_~#prio_queue~0#1.base| () Int)
(declare-fun |c_ULTIMATE.start_main_~#prio_queue~0#1.offset| () Int)
(assert (= ~unnamed0~0~P_ALL 0))
(assert (= ~unnamed0~0~P_PID 1))
(assert (= 2 ~unnamed0~0~P_PGID))
(assert (and (forall ((|v_ULTIMATE.start_receive_~#packet~0#1.base_22| Int) (|v_ULTIMATE.start_main_~#new_packet~0#1.base_18| Int)) (or (not (= (select (store |c_#valid| |v_ULTIMATE.start_main_~#new_packet~0#1.base_18| 1) |v_ULTIMATE.start_receive_~#packet~0#1.base_22|) 0)) (forall ((v_ArrVal_599 (Array Int Int))) (= (select (select (store |c_#memory_$Pointer$.base| |v_ULTIMATE.start_receive_~#packet~0#1.base_22| v_ArrVal_599) |c_ULTIMATE.start_main_~#prio_queue~0#1.base|) |c_ULTIMATE.start_main_~#prio_queue~0#1.offset|) 0)))) (forall ((|v_ULTIMATE.start_receive_~#packet~0#1.base_22| Int) (|v_ULTIMATE.start_main_~#new_packet~0#1.base_18| Int)) (or (not (= (select (store |c_#valid| |v_ULTIMATE.start_main_~#new_packet~0#1.base_18| 1) |v_ULTIMATE.start_receive_~#packet~0#1.base_22|) 0)) (forall ((v_ArrVal_595 (Array Int Int))) (= (select (select (store |c_#memory_$Pointer$.offset| |v_ULTIMATE.start_receive_~#packet~0#1.base_22| v_ArrVal_595) |c_ULTIMATE.start_main_~#prio_queue~0#1.base|) |c_ULTIMATE.start_main_~#prio_queue~0#1.offset|) 0))))))
(assert (not (and (forall ((|v_ULTIMATE.start_main_~#new_packet~0#1.base_19| Int)) (or (forall ((|v_ULTIMATE.start_receive_~#packet~0#1.base_21| Int)) (let ((.cse0 (store |c_#valid| |v_ULTIMATE.start_main_~#new_packet~0#1.base_19| 1))) (or (forall ((v_ArrVal_587 Int) (|v_ULTIMATE.start_receive_~#packet~0#1.base_22| Int) (v_ArrVal_592 Int) (v_ArrVal_584 (Array Int Int)) (|v_ULTIMATE.start_main_~#new_packet~0#1.base_18| Int)) (or (not (= (select (store (store (store .cse0 |v_ULTIMATE.start_receive_~#packet~0#1.base_21| v_ArrVal_587) |v_ULTIMATE.start_main_~#new_packet~0#1.base_19| v_ArrVal_592) |v_ULTIMATE.start_main_~#new_packet~0#1.base_18| 1) |v_ULTIMATE.start_receive_~#packet~0#1.base_22|) 0)) (forall ((v_ArrVal_595 (Array Int Int))) (= (select (select (store (store |c_#memory_$Pointer$.offset| |v_ULTIMATE.start_receive_~#packet~0#1.base_21| v_ArrVal_584) |v_ULTIMATE.start_receive_~#packet~0#1.base_22| v_ArrVal_595) |c_ULTIMATE.start_main_~#prio_queue~0#1.base|) |c_ULTIMATE.start_main_~#prio_queue~0#1.offset|) 0)))) (not (= (select .cse0 |v_ULTIMATE.start_receive_~#packet~0#1.base_21|) 0))))) (not (= (select |c_#valid| |v_ULTIMATE.start_main_~#new_packet~0#1.base_19|) 0)))) (forall ((|v_ULTIMATE.start_main_~#new_packet~0#1.base_19| Int)) (or (forall ((|v_ULTIMATE.start_receive_~#packet~0#1.base_21| Int)) (let ((.cse1 (store |c_#valid| |v_ULTIMATE.start_main_~#new_packet~0#1.base_19| 1))) (or (not (= (select .cse1 |v_ULTIMATE.start_receive_~#packet~0#1.base_21|) 0)) (forall ((v_ArrVal_587 Int) (v_ArrVal_589 (Array Int Int)) (|v_ULTIMATE.start_receive_~#packet~0#1.base_22| Int) (v_ArrVal_592 Int) (|v_ULTIMATE.start_main_~#new_packet~0#1.base_18| Int)) (or (not (= (select (store (store (store .cse1 |v_ULTIMATE.start_receive_~#packet~0#1.base_21| v_ArrVal_587) |v_ULTIMATE.start_main_~#new_packet~0#1.base_19| v_ArrVal_592) |v_ULTIMATE.start_main_~#new_packet~0#1.base_18| 1) |v_ULTIMATE.start_receive_~#packet~0#1.base_22|) 0)) (forall ((v_ArrVal_599 (Array Int Int))) (= (select (select (store (store |c_#memory_$Pointer$.base| |v_ULTIMATE.start_receive_~#packet~0#1.base_21| v_ArrVal_589) |v_ULTIMATE.start_receive_~#packet~0#1.base_22| v_ArrVal_599) |c_ULTIMATE.start_main_~#prio_queue~0#1.base|) |c_ULTIMATE.start_main_~#prio_queue~0#1.offset|) 0))))))) (not (= (select |c_#valid| |v_ULTIMATE.start_main_~#new_packet~0#1.base_19|) 0)))))))
(check-sat)
(exit)
