(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun ~unnamed0~0~P_ALL () Int)
(declare-fun ~unnamed0~0~P_PID () Int)
(declare-fun ~unnamed0~0~P_PGID () Int)
(assert (= ~unnamed0~0~P_ALL 0))
(assert (= ~unnamed0~0~P_PID 1))
(assert (= 2 ~unnamed0~0~P_PGID))
(declare-fun |#memory_$Pointer$.base| () (Array Int (Array Int Int)))
(declare-fun |ULTIMATE.start_main_~#s~0#1.offset| () Int)
(declare-fun |#memory_$Pointer$.offset| () (Array Int (Array Int Int)))
(declare-fun |ULTIMATE.start_sll_create_~head~0#1.offset| () Int)
(declare-fun |ULTIMATE.start_sll_create_~head~0#1.base| () Int)
(declare-fun |#valid| () (Array Int Int))
(assert (forall ((|v_ULTIMATE.start_node_create_~temp~0#1.base_11| Int)) (or (forall ((v_arrayElimArr_4 (Array Int Int)) (v_arrayElimArr_3 (Array Int Int)) (|ULTIMATE.start_main_~#s~0#1.base| Int)) (let ((.cse2 (store |#memory_$Pointer$.base| |v_ULTIMATE.start_node_create_~temp~0#1.base_11| v_arrayElimArr_3)) (.cse1 (store |#memory_$Pointer$.offset| |v_ULTIMATE.start_node_create_~temp~0#1.base_11| v_arrayElimArr_4))) (let ((.cse0 (+ (select (select .cse1 |ULTIMATE.start_main_~#s~0#1.base|) |ULTIMATE.start_main_~#s~0#1.offset|) 4)) (.cse3 (select (select .cse2 |ULTIMATE.start_main_~#s~0#1.base|) |ULTIMATE.start_main_~#s~0#1.offset|))) (or (not (= (select v_arrayElimArr_4 .cse0) |ULTIMATE.start_sll_create_~head~0#1.offset|)) (= (select (select .cse1 (select (select .cse2 .cse3) .cse0)) (+ (select (select .cse1 .cse3) .cse0) 4)) 0) (not (= (select v_arrayElimArr_3 .cse0) |ULTIMATE.start_sll_create_~head~0#1.base|)) (not (= |v_ULTIMATE.start_node_create_~temp~0#1.base_11| .cse3)))))) (not (= (select |#valid| |v_ULTIMATE.start_node_create_~temp~0#1.base_11|) 0)))))
(assert (not (forall ((|v_ULTIMATE.start_node_create_~temp~0#1.base_11| Int)) (or (forall ((v_arrayElimArr_2 (Array Int Int)) (v_arrayElimArr_1 (Array Int Int)) (|ULTIMATE.start_main_~#s~0#1.base| Int)) (let ((.cse3 (store |#memory_$Pointer$.offset| |v_ULTIMATE.start_node_create_~temp~0#1.base_11| v_arrayElimArr_2)) (.cse0 (store |#memory_$Pointer$.base| |v_ULTIMATE.start_node_create_~temp~0#1.base_11| v_arrayElimArr_1))) (let ((.cse1 (select (select .cse0 |ULTIMATE.start_main_~#s~0#1.base|) |ULTIMATE.start_main_~#s~0#1.offset|)) (.cse2 (+ (select (select .cse3 |ULTIMATE.start_main_~#s~0#1.base|) |ULTIMATE.start_main_~#s~0#1.offset|) 4))) (or (= (select (select .cse0 (select (select .cse0 .cse1) .cse2)) (+ (select (select .cse3 .cse1) .cse2) 4)) 0) (not (= .cse1 |v_ULTIMATE.start_node_create_~temp~0#1.base_11|)) (not (= (select v_arrayElimArr_2 .cse2) |ULTIMATE.start_sll_create_~head~0#1.offset|)) (not (= (select v_arrayElimArr_1 .cse2) |ULTIMATE.start_sll_create_~head~0#1.base|)))))) (not (= (select |#valid| |v_ULTIMATE.start_node_create_~temp~0#1.base_11|) 0))))))
(check-sat)
(exit)
