(set-info :smt-lib-version 2.6)
(set-logic ANIA)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int)| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_$Pointer$.base)| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.base| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.base_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_$Pointer$.offset)| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_nondet_tree_#t~nondet5| () Int)
(declare-fun c_nondet_tree_~n~0.base_primed () Int)
(declare-fun c_nondet_tree_~n~0.offset_primed () Int)
(declare-fun |c_aux_v_nondet_tree_#t~nondet7_3| () Int)
(assert (and (<= |c_aux_v_nondet_tree_#t~nondet7_3| 2147483647) (= (mod |c_nondet_tree_#t~nondet5| 256) 0) (= |c_#memory_int_primed| (store |c_#memory_int| c_nondet_tree_~n~0.base_primed (store (select |c_#memory_int| c_nondet_tree_~n~0.base_primed) c_nondet_tree_~n~0.offset_primed |c_aux_v_nondet_tree_#t~nondet7_3|))) (< c_nondet_tree_~n~0.base_primed |c_#StackHeapBarrier|) (<= 0 (+ |c_aux_v_nondet_tree_#t~nondet7_3| 2147483648)) (= |c_#length_primed| (store |c_#length| c_nondet_tree_~n~0.base_primed 20)) (= (store |c_#memory_$Pointer$.offset| c_nondet_tree_~n~0.base_primed (store (select |c_#memory_$Pointer$.offset| c_nondet_tree_~n~0.base_primed) c_nondet_tree_~n~0.offset_primed (select (select |c_#memory_$Pointer$.offset_primed| c_nondet_tree_~n~0.base_primed) c_nondet_tree_~n~0.offset_primed))) |c_#memory_$Pointer$.offset_primed|) (not (= c_nondet_tree_~n~0.base_primed 0)) (= c_nondet_tree_~n~0.offset_primed 0) (= (select |c_#valid| c_nondet_tree_~n~0.base_primed) 0) (= |c_#memory_$Pointer$.base_primed| (store |c_#memory_$Pointer$.base| c_nondet_tree_~n~0.base_primed (store (select |c_#memory_$Pointer$.base| c_nondet_tree_~n~0.base_primed) c_nondet_tree_~n~0.offset_primed (select (select |c_#memory_$Pointer$.base_primed| c_nondet_tree_~n~0.base_primed) c_nondet_tree_~n~0.offset_primed)))) (= |c_#valid_primed| (store |c_#valid| c_nondet_tree_~n~0.base_primed 1))))
(assert (and (= |c_#memory_$Pointer$.base| |c_old(#memory_$Pointer$.base)|) (= |c_#valid| |c_old(#valid)|) (= |c_old(#memory_int)| |c_#memory_int|) (= |c_#memory_$Pointer$.offset| |c_old(#memory_$Pointer$.offset)|) (= |c_old(#length)| |c_#length|)))
(assert (not (exists ((|v_ULTIMATE.start_task_~n#1.base_BEFORE_CALL_9| Int)) (not (= (select (select |c_#memory_$Pointer$.base_primed| |v_ULTIMATE.start_task_~n#1.base_BEFORE_CALL_9|) 12) 0)))))
(check-sat)
(exit)
