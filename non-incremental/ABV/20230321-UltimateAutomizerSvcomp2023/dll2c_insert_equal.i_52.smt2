(set-info :smt-lib-version 2.6)
(set-logic ABV)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2023 [5,6].
This script may not contain all SMT commands that Ultimate Automizer
issued. In order to meet the restrictions for SMT-COMP benchmarks 
we dropped the commands for getting values (resp. models), 
unsatisfiable cores, and interpolants.

2023-03-21, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Max Barth, Daniel Dietsch, Leonard Fichtner,
     Jochen Hoenicke, Dominik Klumpp, Mehdi Naouar, Tanja Schindler,
     Frank Sch√ºssele, Andreas Podelski: Ultimate Automizer and the
     CommuHash Normal Form (Competition Contribution). TACAS 2023
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Competition on Software Verification and
     Witness Validation: SV-COMP 2023.  TACAS 2023
[6] https://sv-comp.sosy-lab.org/2023/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun ~unnamed0~0~P_ALL () (_ BitVec 32))
(declare-fun ~unnamed0~0~P_PID () (_ BitVec 32))
(declare-fun ~unnamed0~0~P_PGID () (_ BitVec 32))
(declare-fun |c_#memory_int| () (Array (_ BitVec 64) (Array (_ BitVec 64) (_ BitVec 32))))
(declare-fun |c_#memory_$Pointer$.base| () (Array (_ BitVec 64) (Array (_ BitVec 64) (_ BitVec 64))))
(declare-fun |c_#memory_$Pointer$.offset| () (Array (_ BitVec 64) (Array (_ BitVec 64) (_ BitVec 64))))
(declare-fun |c_ULTIMATE.start_main_~data~0#1| () (_ BitVec 32))
(declare-fun |c_ULTIMATE.start_main_~#s~0#1.base| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_main_~#s~0#1.offset| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_#t~ret9#1.base| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_~head#1.base| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_~head#1.offset| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_~new_node~0#1.base| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.base| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.offset| () (_ BitVec 64))
(declare-fun |c_ULTIMATE.start_dll_circular_insert_~last~1#1.base| () (_ BitVec 64))
(assert (= ~unnamed0~0~P_ALL (_ bv0 32)))
(assert (= ~unnamed0~0~P_PID (_ bv1 32)))
(assert (= (_ bv2 32) ~unnamed0~0~P_PGID))
(assert (forall ((v_ArrVal_447 (Array (_ BitVec 64) (_ BitVec 64))) (v_ArrVal_457 (Array (_ BitVec 64) (_ BitVec 64))) (v_ArrVal_462 (Array (_ BitVec 64) (_ BitVec 32))) (|v_ULTIMATE.start_dll_circular_insert_~last~1#1.offset_7| (_ BitVec 64)) (v_ArrVal_460 (Array (_ BitVec 64) (_ BitVec 64))) (v_ArrVal_446 (Array (_ BitVec 64) (_ BitVec 32))) (v_ArrVal_461 (_ BitVec 32)) (v_ArrVal_443 (Array (_ BitVec 64) (_ BitVec 64))) (|ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset| (_ BitVec 64))) (= |c_ULTIMATE.start_main_~data~0#1| (let ((.cse0 (select (select |c_#memory_$Pointer$.base| |c_ULTIMATE.start_dll_circular_insert_~head#1.base|) |c_ULTIMATE.start_dll_circular_insert_~head#1.offset|)) (.cse1 (select (select |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_dll_circular_insert_~head#1.base|) |c_ULTIMATE.start_dll_circular_insert_~head#1.offset|))) (let ((.cse2 (select (select |c_#memory_$Pointer$.base| .cse0) .cse1))) (select (select (store (store (store |c_#memory_int| .cse0 (store (select |c_#memory_int| .cse0) .cse1 v_ArrVal_461)) |c_ULTIMATE.start_dll_circular_insert_#t~ret9#1.base| v_ArrVal_462) .cse2 v_ArrVal_446) (select (select (store (store (store |c_#memory_$Pointer$.base| .cse0 v_ArrVal_457) |c_ULTIMATE.start_dll_circular_insert_#t~ret9#1.base| v_ArrVal_447) .cse2 v_ArrVal_460) |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|)) (bvadd (_ bv16 64) (select (select (store (let ((.cse3 (store |c_#memory_$Pointer$.offset| .cse0 (store (select |c_#memory_$Pointer$.offset| .cse0) .cse1 |ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset|)))) (store .cse3 |c_ULTIMATE.start_dll_circular_insert_#t~ret9#1.base| (store (store (select .cse3 |c_ULTIMATE.start_dll_circular_insert_#t~ret9#1.base|) (bvadd (_ bv8 64) |ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset|) .cse1) |ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset| |v_ULTIMATE.start_dll_circular_insert_~last~1#1.offset_7|))) .cse2 v_ArrVal_443) |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|))))))))
(assert (not (forall ((v_ArrVal_447 (Array (_ BitVec 64) (_ BitVec 64))) (v_ArrVal_457 (Array (_ BitVec 64) (_ BitVec 64))) (v_ArrVal_462 (Array (_ BitVec 64) (_ BitVec 32))) (|ULTIMATE.start_dll_circular_insert_~last~1#1.offset| (_ BitVec 64)) (v_ArrVal_460 (Array (_ BitVec 64) (_ BitVec 64))) (v_ArrVal_446 (Array (_ BitVec 64) (_ BitVec 32))) (v_ArrVal_461 (_ BitVec 32)) (v_ArrVal_443 (Array (_ BitVec 64) (_ BitVec 64))) (|ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset| (_ BitVec 64))) (= |c_ULTIMATE.start_main_~data~0#1| (select (select (store (store (store |c_#memory_int| |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.base| (store (select |c_#memory_int| |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.base|) |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.offset| v_ArrVal_461)) |c_ULTIMATE.start_dll_circular_insert_~new_node~0#1.base| v_ArrVal_462) |c_ULTIMATE.start_dll_circular_insert_~last~1#1.base| v_ArrVal_446) (select (select (store (store (store |c_#memory_$Pointer$.base| |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.base| v_ArrVal_457) |c_ULTIMATE.start_dll_circular_insert_~new_node~0#1.base| v_ArrVal_447) |c_ULTIMATE.start_dll_circular_insert_~last~1#1.base| v_ArrVal_460) |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|)) (bvadd (_ bv16 64) (select (select (store (let ((.cse0 (store |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.base| (store (select |c_#memory_$Pointer$.offset| |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.base|) |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.offset| |ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset|)))) (store .cse0 |c_ULTIMATE.start_dll_circular_insert_~new_node~0#1.base| (store (store (select .cse0 |c_ULTIMATE.start_dll_circular_insert_~new_node~0#1.base|) (bvadd (_ bv8 64) |ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset|) |c_ULTIMATE.start_dll_circular_insert_~snd_to_last~0#1.offset|) |ULTIMATE.start_dll_circular_insert_~new_node~0#1.offset| |ULTIMATE.start_dll_circular_insert_~last~1#1.offset|))) |c_ULTIMATE.start_dll_circular_insert_~last~1#1.base| v_ArrVal_443) |c_ULTIMATE.start_main_~#s~0#1.base|) |c_ULTIMATE.start_main_~#s~0#1.offset|)))))))
(check-sat)
(exit)
